version: "3.2"
services:
  redis:
    container_name: "biomage-inframock-redis"
    image: "redis:alpine"

    # forward out the redis server. `redis-cli` should
    # automatically find the server at http://localhost:6379
    ports:
      - "6379:6379"
  localstack:
    container_name: "biomage-inframock-localstack"
    image: "localstack/localstack:0.12.12"
    ports:
      # forward out edge port. set boto3's `endpoint_url`
      # to be http://localhost:4566 to use localstack for development
      - "4566:4566"
      - "20005:4566"
    expose:
      # expose :4566 to the local container network, so inframock-service
      # can bring up the stack for development.
      - "4566"
    environment:
      - SERVICES=sns,sqs,dynamodb,s3,cloudformation,stepfunctions,lambda,iam
      - DEFAULT_REGION=${AWS_DEFAULT_REGION:-eu-west-1}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - MAIN_CONTAINER_NAME='biomage-inframock-localstack'
      - LAMBDA_EXECUTOR=local
      - EXTRA_CORS_ALLOWED_HEADERS=amz-sdk-request, amz-sdk-invocation-id, x-amz-meta-cellranger_version
      - EXTRA_CORS_EXPOSE_HEADERS=Etag
    privileged: true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "~/.docker:/root/.docker"
  service:
    container_name: "biomage-inframock-service"
    build: .
    links:
      - "localstack:localstack"
    volumes:
      - "${BIOMAGE_DATA_PATH-./data}:/data"
    environment:
      - PYTHONUNBUFFERED=1
      # pre-defined (mocked) AWS credentials
      - AWS_ACCESS_KEY_ID=SOME_MOCKED_KEY
      - AWS_SECRET_ACCESS_KEY=SOME_MOCKED_SECRET
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-eu-west-1}

      # whether to populate the database with a mocked experiment
      # and upload corresponding experiment file to InfraMock S3
      - POPULATE_MOCK=${POPULATE_MOCK-true}
